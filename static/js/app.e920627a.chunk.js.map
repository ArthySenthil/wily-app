{"version":3,"sources":["config.js","screens/BookTransactionScreen.js","screens/SearchScreen.js","App.js","assets/booklogo.jpg","assets/book.png","assets/searchingbook.png"],"names":["require","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","TransactionScreen","getCameraPermissions","id","a","async","Permissions","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","initiateBookIssue","db","collection","add","Timestamp","now","toDate","doc","update","FieldValue","increment","Alert","alert","initiateBookReturn","checkBookEligibility","where","get","bookRef","transactionType","docs","length","console","log","map","book","bookAvailability","checkStudentEligibilityForBookIssue","studentRef","isStudentEligible","numberOfBooksIssued","checkStudentEligibilityForReturn","limit","transactionRef","studentId","handleTransaction","transactionMessage","this","BarCodeScanner","onBarCodeScanned","undefined","style","StyleSheet","absoluteFillObject","KeyboardAvoidingView","behavior","styles","container","View","Image","source","width","height","Text","textAlign","fontSize","inputView","TextInput","inputBox","placeholder","onChangeText","text","value","TouchableOpacity","scanButton","onPress","buttonText","transactionAlert","submitButton","submitButtonText","React","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth","fontWeight","color","Searchscreen","props","fetchMoreTransactions","search","toUpperCase","enteredText","split","startAfter","lastVisibleTransaction","allTransactions","searchTransactions","componentDidMount","searchBar","bar","searchButton","FlatList","renderItem","item","borderBottomWidth","bookId","date","keyExtractor","index","toString","onEndReached","onEndReachedThreshold","paddingLeft","App","AppContainer","TabNavigator","createBottomTabNavigator","Transaction","screen","Search","SearchScreen","defaultNavigationOptions","navigation","tabBarIcon","routeName","createAppContainer","module","exports"],"mappings":"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","file":"static/js/app.e920627a.chunk.js","sourcesContent":["import * as firebase from 'firebase'\nrequire('@firebase/firestore')\n\nvar firebaseConfig = {\n   apiKey: \"AIzaSyDrhx5lpqT-Ix7Y2xJpnhYOvp0gXQFeHTo\",\n  authDomain: \"wily-app-a4aac.firebaseapp.com\",\n  databaseURL:\"https://wily-app-a4aac.firebaseio.com\",\n  projectId: \"wily-app-a4aac\",\n  storageBucket: \"wily-app-a4aac.appspot.com\",\n  messagingSenderId: \"139697245457\",\n  appId: \"1:139697245457:web:ba2bd31f64b31f055910b0\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase.firestore();\n","import React from 'react';\nimport { Text, View, TouchableOpacity, TextInput, Image, StyleSheet, KeyboardAvoidingView, Alert } from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase'\nimport db from '../config.js'\n\nexport default class TransactionScreen extends React.Component {\n    constructor(){\n      super();\n      this.state = {\n        hasCameraPermissions: null,\n        scanned: false,\n        scannedBookId: '',\n        scannedStudentId:'',\n        buttonState: 'normal',\n        transactionMessage: ''\n      }\n    }\n\n    getCameraPermissions = async (id) =>{\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\n      \n      this.setState({\n        /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n        hasCameraPermissions: status === \"granted\",\n        buttonState: id,\n        scanned: false\n      });\n    }\n\n    handleBarCodeScanned = async({type, data})=>{\n      const {buttonState} = this.state\n\n      if(buttonState===\"BookId\"){\n        this.setState({\n          scanned: true,\n          scannedBookId: data,\n          buttonState: 'normal'\n        });\n      }\n      else if(buttonState===\"StudentId\"){\n        this.setState({\n          scanned: true,\n          scannedStudentId: data,\n          buttonState: 'normal'\n        });\n      }\n      \n    }\n\n    initiateBookIssue = async()=>{\n      //add a transaction\n      db.collection(\"transactions\").add({\n        'studentId': this.state.scannedStudentId,\n        'bookId' : this.state.scannedBookId,\n        'date' : firebase.firestore.Timestamp.now().toDate(),\n        'transactionType': \"Issue\"\n      })\n      //change book status\n      db.collection(\"books\").doc(this.state.scannedBookId).update({\n        'bookAvailability': false\n      })\n      //change number  of issued books for student\n      db.collection(\"students\").doc(this.state.scannedStudentId).update({\n        'numberOfBooksIssued': firebase.firestore.FieldValue.increment(1)\n      })\n\n      Alert.alert(\"Book issued!\")\n\n      this.setState({\n        scannedStudentId: '',\n        scannedBookId: ''\n      })\n    }\n\n    initiateBookReturn = async()=>{\n      //add a transaction\n      db.collection(\"transactions\").add({\n        'studentId': this.state.scannedStudentId,\n        'bookId' : this.state.scannedBookId,\n        'date' : firebase.firestore.Timestamp.now().toDate(),\n        'transactionType': \"Return\"\n      })\n      //change book status\n      db.collection(\"books\").doc(this.state.scannedBookId).update({\n        'bookAvailability': true\n      })\n      //change number  of issued books for student\n      db.collection(\"students\").doc(this.state.scannedStudentId).update({\n        'numberOfBooksIssued': firebase.firestore.FieldValue.increment(-1)\n      })\n\n      this.setState({\n        scannedStudentId: '',\n        scannedBookId: ''\n      })\n    }\n\n    checkBookEligibility = async()=>{\n      const bookRef = await db.collection(\"books\").where(\"bookId\",\"==\",this.state.scannedBookId).get()\n      var transactionType = \"\"\n      if(bookRef.docs.length == 0){\n        transactionType = \"false\";\n        console.log(bookRef.docs.length)\n      }\n      else{\n        bookRef.docs.map((doc)=>{\n          var book = doc.data()\n          if (book.bookAvailability)\n            transactionType = \"Issue\"\n          else\n            transactionType = \"Return\"\n          \n        })\n      }\n\n      return transactionType\n      \n    }\n\n    checkStudentEligibilityForBookIssue = async()=>{\n      const studentRef = await db.collection(\"students\").where(\"studentId\",\"==\",this.state.scannedStudentId).get()\n      var isStudentEligible = \"\"\n      if(studentRef.docs.length == 0){\n        this.setState({\n          scannedStudentId: '',\n          scannedBookId: ''\n        })\n        isStudentEligible = false\n        Alert.alert(\"The student id doesn't exist in the database!\")\n      }\n      else{\n         studentRef.docs.map((doc)=>{\n            var student = doc.data();\n            if(student.numberOfBooksIssued < 2){\n              isStudentEligible = true\n            }\n            else{\n              isStudentEligible = false\n              Alert.alert(\"The student has already issued 2 books!\")\n              this.setState({\n                scannedStudentId: '',\n                scannedBookId: ''\n              })\n            }\n\n          })\n\n      }\n\n      return isStudentEligible\n\n    }\n\n    checkStudentEligibilityForReturn = async()=>{\n      const transactionRef = await db.collection(\"transactions\").where(\"bookId\",\"==\",this.state.scannedBookId).limit(1).get()\n      var isStudentEligible = \"\"\n      transactionRef.docs.map((doc)=>{\n        var lastBookTransaction = doc.data();\n        if(lastBookTransaction.studentId === this.state.scannedStudentId)\n          isStudentEligible = true\n        else {\n          isStudentEligible = false\n          Alert.alert(\"The book wasn't issued by this student!\")\n          this.setState({\n            scannedStudentId: '',\n            scannedBookId: ''\n          })\n        }\n          \n      })\n      return isStudentEligible\n    }\n\n\n    handleTransaction = async()=>{\n     //verify if the student is eligible for book issue or return or none\n            //student id exists in the database\n            //issue : number of book issued < 2\n            //issue: verify book availability\n            //return: last transaction -> book issued by the student id\n      var transactionType = await this.checkBookEligibility();\n      console.log(\"Transaction Type\", transactionType)\n      if (!transactionType) {\n        Alert.alert(\"The book doesn't exist in the library database!\")\n        this.setState({\n          scannedStudentId: '',\n          scannedBookId: ''\n        })\n      }\n\n      else if(transactionType === \"Issue\"){\n        var isStudentEligible = await this.checkStudentEligibilityForBookIssue()\n        if(isStudentEligible)\n          this.initiateBookIssue()\n          Alert.alert(\"Book issued to the student!\")     \n      }\n\n      else{\n        var isStudentEligible = await this.checkStudentEligibilityForReturn()\n        if(isStudentEligible)\n          this.initiateBookReturn()\n          Alert.alert(\"Book returned to the library!\")\n      }\n    }\n\n    render() {\n      const hasCameraPermissions = this.state.hasCameraPermissions;\n      const scanned = this.state.scanned;\n      const buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions){\n        return(\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        );\n      }\n\n      else if (buttonState === \"normal\"){\n        return(\n          <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n            <View>\n              <Image\n                source={require(\"../assets/booklogo.jpg\")}\n                style={{width:200, height: 200}}/>\n              <Text style={{textAlign: 'center', fontSize: 30}}>Wily</Text>\n            </View>\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Book Id\"\n              onChangeText={(text)=>{\n                this.setState({\n                  scannedBookId: text\n                })\n              }}\n              value={this.state.scannedBookId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"BookId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Student Id\"\n              onChangeText={(text)=>{\n                this.setState({\n                  scannedStudentId: text\n                })\n              }}\n              value={this.state.scannedStudentId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"StudentId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n            <Text style={styles.transactionAlert}>{this.state.transactionMessage}</Text>\n            <TouchableOpacity\n              style={styles.submitButton}\n              onPress={async()=>{\n                var transactionMessage = this.handleTransaction();\n                console.log(\"Transaction Message: \",transactionMessage)\n              }}>\n              <Text style={styles.submitButtonText}>Submit</Text>\n            </TouchableOpacity>\n          </KeyboardAvoidingView>\n        );\n      }\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 15,\n      textAlign: 'center',\n      marginTop: 10\n    },\n    inputView:{\n      flexDirection: 'row',\n      margin: 20\n    },\n    inputBox:{\n      width: 200,\n      height: 40,\n      borderWidth: 1.5,\n      borderRightWidth: 0,\n      fontSize: 20\n    },\n    scanButton:{\n      backgroundColor: '#66BB6A',\n      width: 50,\n      borderWidth: 1.5,\n      borderLeftWidth: 0\n    },\n    submitButton:{\n      backgroundColor: '#FBC02D',\n      width: 100,\n      height:50\n    },\n    submitButtonText:{\n      padding: 10,\n      textAlign: 'center',\n      fontSize: 20,\n      fontWeight:\"bold\",\n      color: 'white'\n    },\n    transactionAlert:{\n      margin:10,\n      color: 'red'\n    }\n  });","import React from 'react';\nimport { Text, View, FlatList, StyleSheet, TextInput, TouchableOpacity} from 'react-native';\nimport db from '../config'\nimport { ScrollView } from 'react-native-gesture-handler';\n\n\n\nexport default class Searchscreen extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        allTransactions: [],\n        lastVisibleTransaction: null,\n        search:''\n      }\n    }\n\n    fetchMoreTransactions = async ()=>{\n      var text = this.state.search.toUpperCase()\n      var enteredText = text.split(\"\")\n\n      \n      if (enteredText[0].toUpperCase() ==='B'){\n      const query = await db.collection(\"transactions\").where('bookId','==',text).startAfter(this.state.lastVisibleTransaction).limit(10).get()\n      query.docs.map((doc)=>{\n        this.setState({\n          allTransactions: [...this.state.allTransactions, doc.data()],\n          lastVisibleTransaction: doc\n        })\n      })\n    }\n      else if(enteredText[0].toUpperCase() === 'S'){\n        const query = await db.collection(\"transactions\").where('bookId','==',text).startAfter(this.state.lastVisibleTransaction).limit(10).get()\n        query.docs.map((doc)=>{\n          this.setState({\n            allTransactions: [...this.state.allTransactions, doc.data()],\n            lastVisibleTransaction: doc\n          })\n        })\n      }\n  }\n\n    searchTransactions= async(text) =>{\n      var enteredText = text.split(\"\")  \n      if (enteredText[0].toUpperCase() ==='B'){\n        const transaction =  await db.collection(\"transactions\").where('bookId','==',text).get()\n        transaction.docs.map((doc)=>{\n          this.setState({\n            allTransactions:[...this.state.allTransactions,doc.data()],\n            lastVisibleTransaction: doc\n          })\n        })\n      }\n      else if(enteredText[0].toUpperCase() === 'S'){\n        const transaction = await db.collection('transactions').where('studentId','==',text).get()\n        transaction.docs.map((doc)=>{\n          this.setState({\n            allTransactions:[...this.state.allTransactions,doc.data()],\n            lastVisibleTransaction: doc\n          })\n        })\n      }\n    }\n\n    componentDidMount = async ()=>{\n      const query = await db.collection(\"transactions\").limit(10).get()\n      query.docs.map((doc)=>{\n        this.setState({\n          allTransactions: [],\n          lastVisibleTransaction: doc\n        })\n      })\n    }\n    render() {\n      return (\n        <View style={styles.container}>\n          <View style={styles.searchBar}>\n        <TextInput \n          style ={styles.bar}\n          placeholder = \"Enter Book Id or Student Id\"\n          onChangeText={(text)=>{this.setState({search:text})}}/>\n          <TouchableOpacity\n            style = {styles.searchButton}\n            onPress={()=>{this.searchTransactions(this.state.search)}}\n          >\n            <Text>Search</Text>\n          </TouchableOpacity>\n          </View>\n        <FlatList\n          data={this.state.allTransactions}\n          renderItem={({item})=>(\n            <View style={{borderBottomWidth: 2}}>\n              <Text>{\"Book Id: \" + item.bookId}</Text>\n              <Text>{\"Student id: \" + item.studentId}</Text>\n              <Text>{\"Transaction Type: \" + item.transactionType}</Text>\n              <Text>{\"Date: \" + item.date.toDate()}</Text>\n            </View>\n          )}\n          keyExtractor= {(item, index)=> index.toString()}\n          onEndReached ={this.fetchMoreTransactions}\n          onEndReachedThreshold={0.7}\n        /> \n        </View>\n      );\n    }\n  }\n\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      marginTop: 20\n    },\n    searchBar:{\n      flexDirection:'row',\n      height:40,\n      width:'auto',\n      borderWidth:0.5,\n      alignItems:'center',\n      backgroundColor:'grey',\n  \n    },\n    bar:{\n      borderWidth:2,\n      height:30,\n      width:300,\n      paddingLeft:10,\n    },\n    searchButton:{\n      borderWidth:1,\n      height:30,\n      width:50,\n      alignItems:'center',\n      justifyContent:'center',\n      backgroundColor:'green'\n    }\n  })","import React from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\n\nimport TransactionScreen from './screens/BookTransactionScreen';\nimport SearchScreen from './screens/SearchScreen';\n\n\nexport default class App extends React.Component {\n  render(){\n    return (\n\n        <AppContainer />\n\n    );\n  }\n}         \n\nconst TabNavigator = createBottomTabNavigator({\n  Transaction: {screen: TransactionScreen},\n  Search: {screen: SearchScreen},\n},\n{\n  defaultNavigationOptions: ({navigation})=>({\n    tabBarIcon: ()=>{\n      const routeName = navigation.state.routeName;\n      console.log(routeName)\n      if(routeName === \"Transaction\"){\n        return(\n          <Image\n          source={require(\"./assets/book.png\")}\n          style={{width:40, height:40}}\n        />\n        )\n\n      }\n      else if(routeName === \"Search\"){\n        return(\n          <Image\n          source={require(\"./assets/searchingbook.png\")}\n          style={{width:40, height:40}}\n        />)\n\n      }\n    }\n  })\n}\n);\n\nconst AppContainer =  createAppContainer(TabNavigator);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n","module.exports = __webpack_public_path__ + \"static/media/booklogo.7982cd70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/book.ef7b8d1f.png\";","module.exports = __webpack_public_path__ + \"static/media/searchingbook.4e7a9d52.png\";"],"sourceRoot":""}